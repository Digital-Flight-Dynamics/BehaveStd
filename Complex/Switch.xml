<?xml version="1.0" encoding="UTF-8"?>

<ModelBehaviors>
	<InputEvent ID="Beh_SwitchEvent">
		<Presets>
			<Preset ID="#InputEvent#">
				<Parameters Type="Override">
					<Max Process="Int">#Positions# 1 -</Max>
					<Switch Param="Type">
						<Case Value="Rotary">
							<Icon>ROTATE</Icon>
							<Interaction>X_AXIS</Interaction>
							<InteractionLockable>X_AXIS</InteractionLockable>
						</Case>
						<Case Value="Horizontal">
							<Icon>MOVE_X</Icon>
							<Interaction>X_AXIS</Interaction>
							<InteractionLockable>X_AXIS</InteractionLockable>
						</Case>
						<Case Value="Vertical">
							<Icon>MOVE_Y</Icon>
							<Interaction>Y_AXIS</Interaction>
							<InteractionLockable>Y_AXIS</InteractionLockable>
						</Case>
					</Switch>
				</Parameters>

				<Tooltip>
					<Icon>#Icon#</Icon>
					<Interaction>#Interaction#</Interaction>
					<InteractionLockable>#InteractionLockable#</InteractionLockable>
					<TTDescription RPN="True">#TooltipDescription#</TTDescription>
					<TTValue RPN="True">#TooltipValue#</TTValue>
				</Tooltip>
				<Value>
					<Init>#DefaultPosition# (&gt;B:#InputEvent#_Set)</Init>
					<Units>Enum</Units>
					<Code>#Get#</Code>
				</Value>
				<Inc>
					<Code>(B:#InputEvent#) p0 + #Max# min (&gt;B:#InputEvent#_Set)</Code>
					<Parameters>
						<Param Type="Int" RPN="True">1</Param>
					</Parameters>
				</Inc>
				<Dec>
					<Code>(B:#InputEvent#) p0 - 0 max (&gt;B:#InputEvent#_Set)</Code>
					<Parameters>
						<Param Type="Int" RPN="True">1</Param>
					</Parameters>
				</Dec>
				<Set>
					<Code>p0 #Set#</Code>
					<Parameters>
						<Param Type="Int" RPN="True">p0</Param>
					</Parameters>
				</Set>
			</Preset>
		</Presets>
	</InputEvent>

	<Template Name="Beh_Switch">
		<Parameters Type="Default">
			<!-- The name of the component to create. -->
			<Name/>
			<!-- The GLTF node of the push button. If it is not given, `Name` will be used. -->
			<Node/>
			<!--
				The name of the animation in your GLTF file(s).
				The first keyframe should be in the 'out' position.
				The middle keyframe should be in the 'in' position.
				The last keyframe should be in the 'out' position.

				If it is not given, `Node` will be used.
			-->
			<AnimName/>
			<!-- RPN code to generate the title of the tooltip -->
			<TooltipTitle/>
			<!--
				The InputEvent preset to use for the pushbutton.
				The event should be named `#InputEvent#_Event` if `InputEventName` is not passed.
				It can use any of the arguments that are passed to this template.
				The increment and decrement events will be called when the switch is moved.
				The InputEvent should ensure that the values do not go out of bounds.

				If this is not given, `TooltipDescription`, `TooltipValue`, `Positions`, `Get`, `Set`,
				and `DefaultPosition` must be given so that the template can create an InputEvent.
			-->
			<InputEvent/>
			<!-- The name of the InputEvent in which the preset is present. -->
			<InputEventName/>
			<!-- RPN code to generate the tooltip's description. -->
			<TooltipDescription/>
			<!-- RPN code to generate the tooltip's value. -->
			<TooltipValue/>
			<!--
				Code to get the value of the variable storing the switch's position.
				Must output values in the range [0, `Positions`).
				The value is expected to be pushed to the stack.
				0 -> leftmost/bottommost position.
			-->
			<Get/>
			<!--
				Code to set the value of the variable storing the switch's position.
				Will be set with values in the range [0, `Positions`).
				The value will be on the stack, and is expected to be popped.
				0 -> leftmost/bottommost position.
			-->
			<Set/>
			<!-- The number of positions of the switch. -->
			<Positions/>
			<!--
				The type of switch:
				Rotary: The switch is a rotary switch.
				Horizontal: The switch is a horizontal switch.
				Vertical: The switch is a vertical switch.
			-->
			<Type/>
			<!-- The default position of the switch on startup. -->
			<DefaultPosition>0</DefaultPosition>
			<!-- The time that moving from one position to another should take, in seconds. -->
			<AnimTime>0.25</AnimTime>
			<!-- If highlighting the hovered GLTF node should be disabled. -->
			<DisableHighlight>False</DisableHighlight>
			<!--
				The node to highlight if DisableHighlight is False.
				If this is not set, the node of the component this is placed on is used.
			-->
			<HighlightNode/>
		</Parameters>

		<Parameters Type="Override">
			<Condition Valid="Node">
				<False>
					<Node>#Name#</Node>
				</False>
			</Condition>
			<Length Process="Int">100 #Positions# 1 - *</Length>
			<Lag Process="Int">100 #AnimTime# /</Lag>
			<Condition Valid="InputEvent">
				<True>
					<Condition Valid="InputEventName">
						<False>
							<InputEventName>#InputEvent#_Event</InputEventName>
						</False>
					</Condition>
				</True>
				<False>
					<InputEventName>Beh_SwitchEvent</InputEventName>
					<InputEvent>#Name#</InputEvent>
				</False>
			</Condition>
		</Parameters>

		<Parameters Type="Override">
			<Condition Valid="AnimName">
				<False>
					<AnimName>#Node#</AnimName>
				</False>
			</Condition>
		</Parameters>

		<Component ID="#Name#" Node="#Node#">
			<UseInputEvent ID="#InputEventName#"/>

			<UseTemplate Name="Beh_Interaction_Switch"/>

			<UseTemplate Name="Beh_Animation_Code">
				<Name>#AnimName#</Name>
				<Code>(B:#InputEvent#) 100 *</Code>
			</UseTemplate>
		</Component>
	</Template>
</ModelBehaviors>