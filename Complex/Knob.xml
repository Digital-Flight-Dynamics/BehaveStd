<?xml version="1.0" encoding="UTF-8"?>

<ModelBehaviors>
	<InputEvent ID="Beh_KnobEvent">
		<Presets>
			<Preset ID="#Name#_Preset">
				<Tooltip>
					<Icon>ROTATE</Icon>
					<Interaction>X_AXIS</Interaction>
					<InteractionLockable>X_AXIS</InteractionLockable>
					<TTDescription RPN="True">#TooltipDescription#</TTDescription>
					<TTValue RPN="True">#TooltipValue#</TTValue>
				</Tooltip>
				<Value>
					<Units>Enum</Units>
					<Code>0</Code>
				</Value>
				<Inc>
					<Code>0</Code>
					<Parameters>
						<Param Type="Int" RPN="True">0</Param>
					</Parameters>
				</Inc>
				<Dec>
					<Code>0</Code>
					<Parameters>
						<Param Type="Int" RPN="True">0</Param>
					</Parameters>
				</Dec>
				<Set>
					<Code>0</Code>
					<Parameters>
						<Param Type="Int" RPN="True">0</Param>
					</Parameters>
				</Set>
			</Preset>
		</Presets>
	</InputEvent>

	<!-- A rotary knob that can rotate infinitely in both directions. -->
	<Template Name="Beh_Knob">
		<Parameters Type="Default">
			<!-- The name of the component to create. -->
			<Name/>
			<!-- The GLTF node of the push button. If it is not given, `Name` will be used. -->
			<Node/>
			<!--
				The name of the animation in your GLTF file(s).
				If it is not given, `Node` will be used.
			-->
			<AnimName/>
			<!-- RPN code to generate the title of the tooltip -->
			<TooltipTitle/>
			<!--
				The InputEvent preset to use for the tooltip.
				If this is not given, `TooltipDescription`, and `TooltipValue`
				must be given so that the template can create an InputEvent.
			-->
			<Tooltip/>
			<!-- RPN code to generate the tooltip's description. -->
			<TooltipDescription/>
			<!-- RPN code to generate the tooltip's value. -->
			<TooltipValue/>
			<!-- The number of positions in one revolution. -->
			<Positions/>
			<!-- The RPN code to run on one clockwise increment. -->
			<OnIncrement/>
			<!-- The RPN code to run on one anticlockwise decrement. -->
			<OnDecrement/>
			<!-- The time that moving from one position to another should take, in seconds. -->
			<AnimTime>0.25</AnimTime>
			<!-- If highlighting the hovered GLTF node should be disabled. -->
			<DisableHighlight>False</DisableHighlight>
			<!--
				The node to highlight if DisableHighlight is False.
				If this is not set, the node of the component this is placed on is used.
			-->
			<HighlightNode/>
		</Parameters>

		<Parameters Type="Override">
			<Condition Valid="Node">
				<False>
					<Node>#Name#</Node>
				</False>
			</Condition>
			<Length Process="Int">100 #Positions# 1 - *</Length>
			<Lag Process="Int">100 #AnimTime# /</Lag>
			<Condition Valid="InputEvent">
				<False>
					<InputEvent>#Name#_Preset</InputEvent>
				</False>
			</Condition>
		</Parameters>

		<Parameters Type="Override">
			<Condition Valid="AnimName">
				<False>
					<AnimName>#Node#</AnimName>
				</False>
			</Condition>
		</Parameters>

		<Component ID="#Name#" Node="#Node#">
			<UseInputEvent ID="Beh_KnobEvent"/>

			<UseTemplate Name="Beh_Interaction_Switch">
				<OnIncrement>(O:SwitchPosition) 1 + (&gt;O:SwitchPosition) #OnIncrement#</OnIncrement>
				<OnDecrement>(O:SwitchPosition) 1 - (&gt;O:SwitchPosition) #OnDecrement#</OnDecrement>
			</UseTemplate>

			<UseTemplate Name="Beh_Animation_Code">
				<Name>#AnimName#</Name>
				<Code>(O:SwitchPosition) 100 *</Code>
				<Wrap>True</Wrap>
			</UseTemplate>
		</Component>
	</Template>
</ModelBehaviors>
