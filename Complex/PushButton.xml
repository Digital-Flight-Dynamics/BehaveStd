<?xml version="1.0" encoding="UTF-8"?>

<ModelBehaviors>
	<InputEvent ID="Beh_PushEvent">
		<Presets>
			<Preset ID="#InputEvent#">
				<Tooltip>
					<Icon>PUSH</Icon>
					<Interaction>PRIMARY_DOWN</Interaction>
					<InteractionLockable>LOCK</InteractionLockable>
					<TTDescription RPN="True">#TooltipDescription#</TTDescription>
					<TTValue RPN="True">#TooltipValue#</TTValue>
				</Tooltip>
				<Value>
					<Units>Bool</Units>
					<Code>1</Code>
				</Value>
				<Inc>
					<Code>0</Code>
					<Parameters>
						<Param Type="Float" RPN="True">0</Param>
					</Parameters>
				</Inc>
				<Dec>
					<Code>0</Code>
					<Parameters>
						<Param Type="Float" RPN="True">0</Param>
					</Parameters>
				</Dec>
				<Set>
					<Code>#OnPush#</Code>
					<Parameters>
						<Param Type="Float" RPN="True">p0</Param>
					</Parameters>
					<Bindings>
						<Binding Alias="#InputEvent#_Press">
							<Param>0</Param>
						</Binding>
					</Bindings>
				</Set>
			</Preset>
		</Presets>
	</InputEvent>

	<Template Name="Beh_PushButton">
		<Parameters Type="Default">
			<!-- The name of the component to create. -->
			<Name/>
			<!-- The GLTF node of the push button. If it is not given, `Name` will be used. -->
			<Node/>
			<!--
				The name of the animation in your GLTF file(s).
				The first keyframe should be in the 'out' position.
				The middle keyframe should be in the 'in' position.
				The last keyframe should be in the 'out' position.

				If it is not given, `Node` will be used.
			-->
			<AnimName/>
			<!-- RPN code to generate the title of the tooltip -->
			<TooltipTitle/>
			<!--
				The InputEvent preset to use for the pushbutton.
				The event should be named `#InputEvent#_Event` if `InputEventName` is not passed.
				It can use any of the arguments that are passed to this template.
				It must have a binding alias called `#InputEvent#_Press` that takes 0 parameters.
				This will be called whenever the button is pushed.

				If this is not given, `TooltipDescription`, `TooltipValue`, and `OnPush`
				must be given so that the template can create an InputEvent.
			-->
			<InputEvent/>
			<!-- The name of the InputEvent in which the preset is present. -->
			<InputEventName/>
			<!-- RPN code to generate the tooltip's description. -->
			<TooltipDescription/>
			<!-- RPN code to generate the tooltip's value. -->
			<TooltipValue/>
			<!-- RPN code to run on push. -->
			<OnPush/>
			<!-- The time that the entire animation (in and out) should take, in seconds. -->
			<AnimTime>0.25</AnimTime>
			<!-- If highlighting the hovered GLTF node should be disabled. -->
			<DisableHighlight>False</DisableHighlight>
			<!--
				The node to highlight if DisableHighlight is False.
				If this is not set, the node of the component this is placed on is used.
			-->
			<HighlightNode/>
		</Parameters>

		<Parameters Type="Override">
			<Condition Valid="Node">
				<False>
					<Node>#Name#</Node>
				</False>
			</Condition>
			<Lag Process="Int">100 #AnimTime# /</Lag>
			<Condition Valid="InputEvent">
				<True>
					<Condition Valid="InputEventName">
						<False>
							<InputEventName>#InputEvent#_Event</InputEventName>
						</False>
					</Condition>
				</True>
				<False>
					<InputEventName>Beh_PushEvent</InputEventName>
					<InputEvent>#Name#</InputEvent>
				</False>
			</Condition>
		</Parameters>

		<Parameters Type="Override">
			<Condition Valid="AnimName">
				<False>
					<AnimName>#Node#</AnimName>
				</False>
			</Condition>
		</Parameters>

		<Component ID="#Name#" Node="#Node#">
			<UseInputEvent ID="#InputEventName#"/>

			<UseTemplate Name="Beh_Interaction_Click">
				<OnClick>
					(O:AnimValue) ! (&gt;O:AnimValue)
					(&gt;B:#InputEvent#_Press)
				</OnClick>
				<Tooltip>#InputEvent#</Tooltip>
			</UseTemplate>

			<UseTemplate Name="Beh_Animation_Code">
				<Name>#AnimName#</Name>
				<Code>(O:AnimValue) 100 *</Code>
				<Length>100</Length>
			</UseTemplate>
		</Component>
	</Template>
</ModelBehaviors>
